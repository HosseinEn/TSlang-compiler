Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALSE
    AND
    AS
    AUTO
    BREAK
    CASE
    CLASS
    CLOSE
    CONST
    CONTINUE
    DECREMENT
    DEFAULT
    DEL
    DIVEQUAL
    EXCEPT
    FROM
    GLOBAL
    IMPORT
    IN
    INCREMENT
    INPUT
    INT
    IS
    LAMBDA
    LEN
    LENGTH
    LSHIFT
    MINUSEQUAL
    MODEQUAL
    NONLOCAL
    NOT
    NULL
    ONE
    OPEN
    OR
    PASS
    PERIOD
    PLUSEQUAL
    RAISE
    RANGE
    READ
    RSHIFT
    RUE
    SIZEOF
    STATIC
    STR
    STRUCT
    SWITCH
    TIMESEQUAL
    TRY
    VECTOR
    VOID
    WITH
    WRITE
    XOR

Grammar

Rule 0     S' -> prog
Rule 1     prog -> empty
Rule 2     prog -> func prog
Rule 3     func -> DEF TYPE ID LPAREN flist RPAREN LBRACE body RBRACE
Rule 4     func -> DEF TYPE ID LPAREN flist RPAREN RETURN expr SEMI
Rule 5     func -> DEF TYPE ID LPAREN error RPAREN LBRACE body RBRACE
Rule 6     func -> DEF error ID LPAREN flist RPAREN LBRACE body RBRACE
Rule 7     body -> empty
Rule 8     body -> stmt body
Rule 9     stmt -> expr SEMI
Rule 10    stmt -> defvar SEMI
Rule 11    stmt -> return_instr SEMI
Rule 12    stmt -> single_if
Rule 13    stmt -> if_with_else
Rule 14    stmt -> while_loop
Rule 15    stmt -> for_loop
Rule 16    stmt -> block
Rule 17    stmt -> func
Rule 18    stmt -> error SEMI
Rule 19    stmt -> error
Rule 20    single_if -> IF LPAREN expr RPAREN stmt
Rule 21    if_with_else -> IF LPAREN expr RPAREN stmt ELSE stmt
Rule 22    while_loop -> WHILE LPAREN expr RPAREN stmt
Rule 23    for_loop -> FOR LPAREN ID EQUALS expr TO expr RPAREN stmt
Rule 24    block -> LBRACE body RBRACE
Rule 25    return_instr -> RETURN expr
Rule 26    defvar -> VAR TYPE ID
Rule 27    defvar -> VAR TYPE ID EQUALS expr
Rule 28    flist -> empty
Rule 29    flist -> TYPE ID
Rule 30    flist -> TYPE ID COMMA flist
Rule 31    clist -> empty
Rule 32    clist -> expr
Rule 33    clist -> expr COMMA clist
Rule 34    expr -> operation_on_list
Rule 35    expr -> expr_list
Rule 36    expr -> ternary_expr
Rule 37    expr -> LNOT expr
Rule 38    expr -> PLUS expr
Rule 39    expr -> MINUS expr
Rule 40    expr -> binary_expr
Rule 41    expr -> ID
Rule 42    expr -> assignment
Rule 43    expr -> function_call
Rule 44    expr -> NUMBER
Rule 45    expr -> STRING
Rule 46    expr -> error
Rule 47    expr_list -> LBRACKET clist RBRACKET
Rule 48    operation_on_list -> expr LBRACKET expr RBRACKET
Rule 49    operation_on_list -> ID LBRACKET expr RBRACKET
Rule 50    ternary_expr -> expr QUESTIONMARK expr COLON expr
Rule 51    function_call -> ID LPAREN clist RPAREN
Rule 52    function_call -> ID LPAREN error RPAREN
Rule 53    binary_expr -> expr PLUS expr
Rule 54    binary_expr -> expr MINUS expr
Rule 55    binary_expr -> expr TIMES expr
Rule 56    binary_expr -> expr DIVIDE expr
Rule 57    binary_expr -> expr MODULO expr
Rule 58    binary_expr -> expr GT expr
Rule 59    binary_expr -> expr LT expr
Rule 60    binary_expr -> expr EQ expr
Rule 61    binary_expr -> expr LE expr
Rule 62    binary_expr -> expr GE expr
Rule 63    binary_expr -> expr NE expr
Rule 64    binary_expr -> expr LOR expr
Rule 65    binary_expr -> expr LAND expr
Rule 66    empty -> <empty>

Terminals, with rules where they appear

ALSE                 : 
AND                  : 
AS                   : 
AUTO                 : 
BREAK                : 
CASE                 : 
CLASS                : 
CLOSE                : 
COLON                : 50
COMMA                : 30 33
CONST                : 
CONTINUE             : 
DECREMENT            : 
DEF                  : 3 4 5 6
DEFAULT              : 
DEL                  : 
DIVEQUAL             : 
DIVIDE               : 56
ELSE                 : 21
EQ                   : 60
EQUALS               : 23 27
EXCEPT               : 
FOR                  : 23
FROM                 : 
GE                   : 62
GLOBAL               : 
GT                   : 58
ID                   : 3 4 5 6 23 26 27 29 30 41 49 51 52
IF                   : 20 21
IMPORT               : 
IN                   : 
INCREMENT            : 
INPUT                : 
INT                  : 
IS                   : 
LAMBDA               : 
LAND                 : 65
LBRACE               : 3 5 6 24
LBRACKET             : 47 48 49
LE                   : 61
LEN                  : 
LENGTH               : 
LNOT                 : 37
LOR                  : 64
LPAREN               : 3 4 5 6 20 21 22 23 51 52
LSHIFT               : 
LT                   : 59
MINUS                : 39 54
MINUSEQUAL           : 
MODEQUAL             : 
MODULO               : 57
NE                   : 63
NONLOCAL             : 
NOT                  : 
NULL                 : 
NUMBER               : 44
ONE                  : 
OPEN                 : 
OR                   : 
PASS                 : 
PERIOD               : 
PLUS                 : 38 53
PLUSEQUAL            : 
QUESTIONMARK         : 50
RAISE                : 
RANGE                : 
RBRACE               : 3 5 6 24
RBRACKET             : 47 48 49
READ                 : 
RETURN               : 4 25
RPAREN               : 3 4 5 6 20 21 22 23 51 52
RSHIFT               : 
RUE                  : 
SEMI                 : 4 9 10 11 18
SIZEOF               : 
STATIC               : 
STR                  : 
STRING               : 45
STRUCT               : 
SWITCH               : 
TIMES                : 55
TIMESEQUAL           : 
TO                   : 23
TRY                  : 
TYPE                 : 3 4 5 26 27 29 30
VAR                  : 26 27
VECTOR               : 
VOID                 : 
WHILE                : 22
WITH                 : 
WRITE                : 
XOR                  : 
error                : 5 6 18 19 46 52

Nonterminals, with rules where they appear

assignment           : 42
binary_expr          : 40
block                : 16
body                 : 3 5 6 8 24
clist                : 33 47 51
defvar               : 10
empty                : 1 7 28 31
expr                 : 4 9 20 21 22 23 23 25 27 32 33 37 38 39 48 48 49 50 50 50 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65
expr_list            : 35
flist                : 3 4 6 30
for_loop             : 15
func                 : 2 17
function_call        : 43
if_with_else         : 13
operation_on_list    : 34
prog                 : 2 0
return_instr         : 11
single_if            : 12
stmt                 : 8 20 21 21 22 23
ternary_expr         : 36
while_loop           : 14

