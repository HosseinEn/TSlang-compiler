iden := [a-zA-Z_][a-zA-Z_0-9]

string := '"' [^"\n]* '"' |
          "'" [^'\n]* "'"

number := [0-9]+

comment := \#.*$

prog := 
        |
        func prog

func := def type iden (flist) { body } |
        def type iden (flist) return expr ;

body := 
        |
        stmt body

stmt := 
        expr ;                              |
        defvar ;                            |
        if ( expr ) stmt                    |
        if ( expr ) stmt else stmt          |
        while ( expr ) stmt                 |
        for ( iden = expr to expr ) stmt    |
        return expr ;                       |
        { body }                            |
        func
    
defvar :=
          var type  |
          var type iden = expr

flist := 
                            |
         type iden          |
         type iden, flist


clist := 
                        |
            expr        |
            expr, clist 


type := 
            int         |  
            vector      |
            str         |
            null

expr :=
            expr [ expr ]               |
            [ clist ]                   |
            expr ? expr : expr          |
            expr + expr                 |
            expr - expr                 |
            expr * expr                 |
            expr / expr                 |
            expr % expr                 |
            expr > expr                 |
            expr < expr                 |
            expr == expr                |
            expr >= expr                |
            expr <= expr                |
            expr != expr                |
            expr || expr                |
            expr && expr                |
            ! expr                      |
            + expr                      |
            - expr                      |
            iden                        |
            iden = expr                 |
            iden = ( clist )            |
            number                      |
            string                      |